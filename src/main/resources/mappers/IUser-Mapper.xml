<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.blf2.dao.IUserDao">
    <resultMap id="UserInfoResultMap" type="net.blf2.entity.UserInfo">
        <id property="userNum" column="userNum"/>
        <result property="userName" column="userName" />
        <result property="userPswd" column="userPswd"/>
        <result property="userPhone" column="userPhone"/>
        <result property="userMajorityClass" column="userMajorityClass" />
        <result property="userNote" column="userNote" />
        <association property="userRoleInfo" column="userRoleId" resultMap="UserRoleInfoResultMap"
                     javaType="net.blf2.entity.UserRoleInfo" />
    </resultMap>
    <resultMap id="UserRoleInfoResultMap" type="net.blf2.entity.UserRoleInfo">
        <id property="userRoleId" column="userRoleId"/>
        <result property="userRoleName" column="userRoleName"/>
        <result property="userRoleNote" column="userRoleNote"/>
        <collection property="ruleInfoList" ofType="net.blf2.entity.RuleInfo" resultMap="RuleInfoResultMap" />
    </resultMap>
    <resultMap id="RuleInfoResultMap" type="net.blf2.entity.RuleInfo">
        <id property="ruleId" column="ruleId" />
        <result property="ruleName" column="ruleName"/>
    </resultMap>

    <sql id="UserInfoColumns">
        UserInfo.userNum,UserInfo.userName,UserInfo.userPswd,UserInfo.userPhone,UserInfo.userMajorityClass,UserInfo.userNote
    </sql>

    <sql id="UserRoleInfoColumns">
       UserRoleInfo.userRoleId,UserRoleInfo.userRoleName,UserRoleInfo.userRoleNote
    </sql>

    <sql id="RuleInfoColumns">
       RuleInfo.ruleId,RuleInfo.ruleName
    </sql>

    <sql id="JoinIn">
        FROM UserInfo
        LEFT OUTER JOIN UserRoleInfo ON UserInfo.userRoleId = UserRoleInfo.userRoleId
        LEFT OUTER JOIN RuleInfo ON UserRoleInfo.userRoleId =
    </sql>

    <sql id="insertUserInfo">
        userNum,userName,userPswd,userPhone,userMajorityClass,userNote
    </sql>

    <select id="queryUserInfoByUserNum" resultMap="UserInfoResultMap" parameterType="String"
            statementType="PREPARED">
        SELECT
        <include refid="UserInfoColumns"/>,
        <include refid="UserRoleInfoColumns" />,
        <include refid="RuleInfoColumns" />
        <include refid="JoinIn" />
        WHERE
        ClassInfo.classId = #{classId}
    </select>

    <select id="queryClassInfoAll" statementType="PREPARED" parameterType="String"
            resultMap="ClassInfoResultMap">
        SELECT
        <include refid="ClassInfoColumns"/>,
        <include refid="UserInfoColumns" />,
        <include refid="UserRoleInfoColumns" />
        <include refid="JoinIn" />
    </select>

    <select id="queryClassIdByMonitorId" statementType="PREPARED" parameterType="String"
            resultType="String">
        SELECT
        ClassInfo.classId
        FROM
        ClassInfo
        WHERE
        ClassInfo.monitorId = #{monitorId}
    </select>

    <select id="queryClassIdByClassMajorNameGradeNum" statementType="PREPARED" parameterType="String"
            resultType="String">
        SELECT
        ClassInfo.classId
        FROM
        ClassInfo
        WHERE
        ClassInfo.majorName = #{majorName}
        AND
        ClassInfo.classGrade = #{classGrade}
        AND
        ClassInfo.classNum = #{classNum}
    </select>

    <select id="queryClassInfoByMonitorId" statementType="PREPARED" parameterType="String"
            resultMap="ClassInfoResultMap">
        SELECT
        <include refid="ClassInfoColumns"/>,
        <include refid="UserInfoColumns" />,
        <include refid="UserRoleInfoColumns" />
        <include refid="JoinIn" />
        WHERE
        ClassInfo.monitorId = #{monitorId}
    </select>

    <select id="queryMajorNameGradeNums" statementType="PREPARED" resultType="String">
        SELECT CONCAT(ClassInfo.majorName,ClassInfo.classGrade,ClassInfo.classNum)
        FROM
        ClassInfo
    </select>

    <insert id="insertClassInfo">
        INSERT INTO ClassInfo(
        <include refid="insertClassInfoColumns" />
        )
        VALUES(
        #{classId},#{majorName},#{classGrade},#{classNum},#{monitorInfo.userId},#{classNote}
        )
    </insert>

    <update id="updateClassInfo" statementType="PREPARED" flushCache="true" timeout="20000">
        UPDATE
        ClassInfo
        <trim prefix="set" suffixOverrides=",">
            <if test="majorName != null">
                majorName = #{majorName},
            </if>
            <if test="classGrade != null">
                classGrade = #{classGrade},
            </if>
            <if test="classNum != null">
                classNum = #{classNum},
            </if>
            <if test="monitorInfo.userId != null">
                monitorId = #{monitorInfo.userId},
            </if>
            <if test="classNote != null">
                classNote = #{classNote}
            </if>
        </trim>
        WHERE
        classId = #{classId}
    </update>

    <delete id="deleteClassInfoByClassId" flushCache="true" parameterType="String"
            statementType="PREPARED" timeout="20000">
        DELETE FROM ClassInfo WHERE classId = #{classId}
    </delete>
</mapper>