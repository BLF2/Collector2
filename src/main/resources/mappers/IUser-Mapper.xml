<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.blf2.dao.IUserDao">
    <resultMap id="UserInfoResultMap" type="net.blf2.entity.UserInfo">
        <id property="userNum" column="userNum"/>
        <result property="userName" column="userName" />
        <result property="userPswd" column="userPswd"/>
        <result property="userPhone" column="userPhone"/>
        <result property="userMajorityClass" column="userMajorityClass" />
        <result property="userNote" column="userNote" />
        <association property="userRoleInfo" resultMap="UserRoleInfoResultMap"
                     javaType="net.blf2.entity.UserRoleInfo" />
    </resultMap>
    <resultMap id="UserRoleInfoResultMap" type="net.blf2.entity.UserRoleInfo">
        <id property="userRoleId" column="userRoleId"/>
        <result property="userRoleName" column="userRoleName"/>
        <result property="userRoleNote" column="userRoleNote"/>
        <collection property="ruleInfoList" ofType="net.blf2.entity.RuleInfo" resultMap="RuleInfoResultMap" />
    </resultMap>
    <resultMap id="RuleInfoResultMap" type="net.blf2.entity.RuleInfo">
        <id property="ruleId" column="ruleId" />
        <result property="ruleName" column="ruleName"/>
    </resultMap>

    <sql id="UserInfoColumns">
        UserInfo.userNum,UserInfo.userName,UserInfo.userPswd,UserInfo.userPhone,UserInfo.userMajorityClass,UserInfo.userNote
    </sql>

    <sql id="UserRoleInfoColumns">
       UserRoleInfo.userRoleId,UserRoleInfo.userRoleName,UserRoleInfo.userRoleNote
    </sql>

    <sql id="RuleInfoColumns">
       RuleInfo.ruleId,RuleInfo.ruleName
    </sql>

    <sql id="JoinIn">
        FROM UserInfo
        LEFT OUTER JOIN UserRoleInfo ON UserInfo.userRoleId = UserRoleInfo.userRoleId
        LEFT OUTER JOIN UserRoleRuleRelation ON UserRoleInfo.userRoleId = UserRoleRuleRelation.relationRoleId
        LEFT OUTER JOIN RuleInfo ON UserRoleRuleRelation.relationRuleId = RuleInfo.ruleId
    </sql>

    <sql id="insertUserInfoColumns">
        userNum,userName,userPswd,userPhone,userMajorityClass,userNote,userRoleId
    </sql>

    <select id="queryUserInfoByUserNum" resultMap="UserInfoResultMap" parameterType="String"
            statementType="PREPARED">
        SELECT
        <include refid="UserInfoColumns"/>,
        <include refid="UserRoleInfoColumns" />,
        <include refid="RuleInfoColumns" />
        <include refid="JoinIn" />
        WHERE
        UserInfo.userNum = #{userNum}
    </select>

    <select id="queryUserInfoAll" statementType="PREPARED" resultMap="UserInfoResultMap">
        SELECT
        <include refid="UserInfoColumns"/>,
        <include refid="UserRoleInfoColumns" />,
        <include refid="RuleInfoColumns" />
        <include refid="JoinIn" />
    </select>

    <select id="queryUserInfoByUserPhone" statementType="PREPARED" parameterType="String"
            resultMap="UserInfoResultMap">
        SELECT
        <include refid="UserInfoColumns"/>,
        <include refid="UserRoleInfoColumns" />,
        <include refid="RuleInfoColumns" />
        <include refid="JoinIn" />
        WHERE
        UserInfo.userPhone = #{userPhone}
    </select>

    <select id="queryUserInfoByUserRoleId" statementType="PREPARED" parameterType="String"
            resultMap="UserInfoResultMap">
        SELECT
        <include refid="UserInfoColumns"/>,
        <include refid="UserRoleInfoColumns" />,
        <include refid="RuleInfoColumns" />
        <include refid="JoinIn" />
        WHERE
        UserInfo.userRoleId = #{userRoleId}
    </select>

    <select id="queryUserNumByUserPhone" statementType="PREPARED" resultType="String" parameterType="String">
        SELECT
        UserInfo.userNum
        FROM
        UserInfo
        WHERE
        UserInfo.userPhone = #{userPhone}
    </select>

    <insert id="insertUserInfo">
        INSERT INTO UserInfo(
        <include refid="insertUserInfoColumns" />
        <!--userNum,userName,userPswd,userPhone,userMajorityClass,userNote,userRoleId -->
        )
        VALUES(
        #{userNum},#{userName},#{userPswd},#{userPhone},#{userMajorityClass},#{userNote},#{userRoleInfo.userRoleId}
        )
    </insert>

    <update id="updateUserInfo" statementType="PREPARED" flushCache="true" timeout="20000">
        UPDATE
        UserInfo
        <trim prefix="set" suffixOverrides=",">
            <if test="userName != null">
                userName = #{userName},
            </if>
            <if test="userPswd != null">
                userPswd = #{userPswd},
            </if>
            <if test="userPhone != null">
                userPhone = #{userPhone},
            </if>
            <if test="userMajorityClass != null">
                userMajorityClass = #{userMajorityClass},
            </if>
            <if test="userNote != null">
                userNote = #{userNote},
            </if>
            <if test="userRoleInfo != null and userRoleInfo.userRoleId != null">
                userRoleId = #{userRoleInfo.userRoleId}
            </if>
        </trim>
        WHERE
        userNum = #{userNum}
    </update>

    <delete id="deleteUserInfoByUserNum" flushCache="true" parameterType="String"
            statementType="PREPARED" timeout="20000">
        DELETE FROM UserInfo WHERE userNum = #{userNum}
    </delete>

    <delete id="deleteUserInfoByUserNums" flushCache="true" statementType="PREPARED" timeout="20000">
        DELETE FROM UserInfo WHERE userNum in
        <foreach collection="list" item="userNum" index="index" open="(" close=")" separator=",">
            #{userNum}
        </foreach>
    </delete>
</mapper>